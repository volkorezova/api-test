package com.api.domaine.assertions.credentials;

import com.api.domaine.credentials.CredentialsForResetPass;
import org.assertj.core.api.AbstractAssert;

/**
 * {@link CredentialsForResetPass} specific assertions - Generated by CustomAssertionGenerator.
 */
public class CredentialsForResetPassAssert extends AbstractAssert<CredentialsForResetPassAssert, CredentialsForResetPass> {

  /**
   * Creates a new <code>{@link CredentialsForResetPassAssert}</code> to make assertions on actual CredentialsForResetPass.
   * @param actual the CredentialsForResetPass we want to make assertions on.
   */
  public CredentialsForResetPassAssert(CredentialsForResetPass actual) {
    super(actual, CredentialsForResetPassAssert.class);
  }

  /**
   * An entry point for CredentialsForResetPassAssert to follow AssertJ standard <code>assertThat()</code> statements.<br>
   * With a static import, one can write directly: <code>assertThat(myCredentialsForResetPass)</code> and get specific assertion with code completion.
   * @param actual the CredentialsForResetPass we want to make assertions on.
   * @return a new <code>{@link CredentialsForResetPassAssert}</code>
   */
  public static CredentialsForResetPassAssert assertThat(CredentialsForResetPass actual) {
    return new CredentialsForResetPassAssert(actual);
  }

}
